---------------------MOST IMPORTANT QUESTION---------------------------
--01.WRITE A QUERY TO TAKE BACKUP OF EXISTING TABLE.
CREATE TABLE EMPLOYEES_BKP
AS
SELECT * FROM EMPLOYEES;

--02.WRITE A QUERY TO COPY STRUCTURE OF EXISTING EMPLOYEES TABLE
CREATE TABLE EMPLOYEE_DDL_COPY
AS
SELECT *FROM EMPLOYEES
WHERE 1=2;

--03.WRITE A QUERY TO LIST OUT ALL DUPLICATE RECORDS FROM A TABLE
SELECT *FROM(
SELECT EMPLOYEE_ID,COUNT(*) AS CNT
FROM EMPLOYEES
GROUP BY EMPLOYEE_ID
) WHERE CNT>1;

SELECT EMPLOYEE_ID,COUNT(*) AS CNT
FROM EMPLOYEES
GROUP BY EMPLOYEE_ID
HAVING COUNT(*)>1;


--04.WRITE A QUERY TO DELETE A DUPLICATE RECORDS
DELETE FROM EMPLOYEES_BKP E1
WHERE ROWID !=(SELECT MAX(ROWID)
            FROM EMPLOYEES_BKP E2
            WHERE E2.EMPLOYEE_ID=E1.EMPLOYEE_ID);
            
--05.WRITE A QUERY TO DISPLAY TOP 3 SALARIES
SELECT *FROM (
SELECT FIRST_NAME,LAST_NAME,SALARY,
DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DEN
FROM EMPLOYEES
)WHERE DEN<4;


WITH TEMP1 AS
(SELECT FIRST_NAME,LAST_NAME,SALARY,
 DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DEN
 FROM EMPLOYEES
)
SELECT *
FROM TEMP1
WHERE DEN<4;

--06.WRITE A QUERY TO DISPLAY BOTTOM 3 SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,SALARY,
DENSE_RANK() OVER(ORDER BY SALARY ASC) AS DEN
FROM EMPLOYEES
)WHERE DEN<4;

WITH TEM1BOTTOM AS
(SELECT FIRST_NAME,LAST_NAME,SALARY,
 DENSE_RANK() OVER(ORDER BY SALARY ASC) AS DEN
 FROM EMPLOYEES
)
SELECT *
FROM TEM1BOTTOM
WHERE DEN<4;

--07.WRITE A QUERY TO DISPLAY DEPARTMENT_ID WISE TOP 3 SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,DEPARTMENT_ID,SALARY,
 DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC) AS DEN
FROM EMPLOYEES
)WHERE DEN<4;


--08.WRITE A QUERY TO DISPLAY DEPARTMENT_ID WISE Bottom 3 SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,DEPARTMENT_ID,SALARY,
DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY ASC) AS DEN
FROM EMPLOYEES
)WHERE DEN<4;

WITH TEMP1 AS
(SELECT FIRST_NAME,LAST_NAME,DEPARTMENT_ID,SALARY,
DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY ASC)AS DEN
FROM EMPLOYEES 
)
SELECT *
FROM TEMP1
WHERE DEN<4;


--09.WAQD- TOP 3RD SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,SALARY,
DENSE_RANK() OVER(ORDER BY SALARY DESC)AS DEN
FROM EMPLOYEES
)WHERE DEN=1;

--10WAQD- BOTTOM 3 RD SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,SALARY,
DENSE_RANK() OVER(ORDER BY SALARY ASC) AS DEN
FROM EMPLOYEES
)WHERE DEN=3;


--11.WRITE A QUERY TO DISPLAY DEPARTMENT_ID WISE TOP 3 SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,DEPARTMENT_ID,SALARY,
DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC) AS DEN
FROM EMPLOYEES
) WHERE DEN<4
;
--=====================3rd March Revi===============================================
---------------------MOST IMPORTANT QUESTION---------------------------
--01.WRITE A QUERY TO TAKE BACKUP OF EXISTING TABLE.
CREATE TABLE EMPLOYEE_BKP
AS
SELECT *FROM EMPLOYEES;
--02.WRITE A QUERY TO COPY STRUCTURE OF EXISTING EMPLOYEES TABLE
CREATE TABLE EMPLOYEE_DDL
AS
SELECT *FROM EMPLOYEES
WHERE
1=2;
--03.WRITE A QUERY TO LIST OUT ALL DUPLICATE RECORDS FROM A TABLE
SELECT *FROM(
SELECT EMPLOYEE_ID,COUNT(*) AS CNT
FROM EMPLOYEES
GROUP BY EMPLOYEE_ID
)WHERE CNT>1;
--04.WRITE A QUERY TO DELETE A DUPLICATE RECORDS
DELETE FROM EMPLOYEES E1
WHERE ROWID!=(SELECT MAX(ROWID)
            FROM EMPLOYEES E2
             WHERE E2.EMPLOYEE_ID=E1.EMPLOYEE_ID);


--05.WRITE A QUERY TO DISPLAY TOP 3 SALARIES
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,SALARY,
DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DEN
FROM EMPLOYEES
)WHERE DEN<4;
--06.WRITE A QUERY TO DISPLAY BOTTOM 3 SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,SALARY,
DENSE_RANK() OVER(ORDER BY SALARY ASC)AS DEN
FROM EMPLOYEES
)WHERE DEN<4;
--07.WRITE A QUERY TO DISPLAY DEPARTMENT_ID WISE TOP 3 SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,DEPARTMENT_ID,SALARY,
DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC) AS DEN
FROM EMPLOYEES
)WHERE DEN<4;

SELECT 
E.FIRST_NAME,
E.LAST_NAME,
D.DEPARTMENT_NAME,
E.SALARY,
DENSE_RANK() OVER(PARTITION BY D.DEPARTMENT_NAME ORDER BY E.SALARY DESC) AS DEN
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON(E.DEPARTMENT_ID=D.DEPARTMENT_ID);
--08.WRITE A QUERY TO DISPLAY DEPARTMENT_ID WISE Bottom 3 SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,DEPARTMENT_ID,SALARY,
DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY ASC) AS DEN
FROM EMPLOYEES
)WHERE DEN<4;

--09.WAQD- TOP 3RD SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,SALARY,
DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DEN
FROM EMPLOYEES
)WHERE DEN=3;
--10.WAQD- BOTTOM 3 RD SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,SALARY,
DENSE_RANK() OVER(ORDER BY SALARY) AS DEN
FROM EMPLOYEES
)WHERE DEN=3;

--11.WRITE A QUERY TO DISPLAY DEPARTMENT_ID WISE TOP 3 SALARY
SELECT *FROM(
SELECT FIRST_NAME,LAST_NAME,DEPARTMENT_ID,SALARY,
DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC) AS DEN
FROM EMPLOYEES
)WHERE DEN=1;


SELECT *FROM(
SELECT 
E.FIRST_NAME,
E.LAST_NAME,
E.SALARY,
E.DEPARTMENT_ID,
D.DEPARTMENT_NAME,
DENSE_RANK() OVER(PARTITION BY D.DEPARTMENT_ID ORDER BY E.SALARY DESC) AS DEN
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON(E.DEPARTMENT_ID=D.DEPARTMENT_ID)
)WHERE DEN=1;


----------------------15th march----------------------------------------------
--TOP 3rd salary 
SELECT *FROM(
SELECT 
FIRST_NAME,
LAST_NAME,
SALARY,
DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DEN
FROM EMPLOYEES
)WHERE DEN=3;


--TOP 5 SALARIES
SELECT *FROM(
SELECT 
FIRST_NAME,
LAST_NAME,
SALARY,
DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DEN
FROM EMPLOYEES
)WHERE DEN<6;

--------------------------------------------------------------------------------------











